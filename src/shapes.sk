namespace Shapes {
    class Rect {
        # top left
        var pos Vector
        var size Vector
        var angleRad double = 0.0
        var fillStyle string = null
        var imageElement HTMLImageElement = null

        def render(ctx CanvasRenderingContext2D) {
            ctx.save

            # move origin to center of where we'll draw the rectangle
            ctx.translate(pos.x + size.x / 2, pos.y + size.y / 2)

            # rotate canvas
            ctx.rotate(angleRad)

            if fillStyle != null {
                ctx.fillStyle = fillStyle
            }

            # draw shape or image
            if imageElement != null {
                ctx.drawImage(imageElement, 0, 0)
            } else {
                ctx.fillRect(- size.x / 2, - size.x / 2, size.x, size.y)
            }

            ctx.restore
        }
    }

    class Circle {
        # center
        var pos Vector
        var radius double

        def render(ctx CanvasRenderingContext2D) {
            ctx.beginPath
            ctx.arc(pos.x, pos.y, radius, 0, 2 * Math.PI)
            ctx.stroke
            ctx.closePath
        }
    }
}